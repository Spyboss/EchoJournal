// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Sentiment analysis AI agent for journal entries.
 *
 * - analyzeSentiment - A function that analyzes the sentiment of a journal entry.
 * - AnalyzeSentimentInput - The input type for the analyzeSentiment function.
 * - AnalyzeSentimentOutput - The return type for the analyzeSentiment function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const AnalyzeSentimentInputSchema = z.object({
  journalEntry: z.string().describe('The journal entry to analyze.'),
});
export type AnalyzeSentimentInput = z.infer<typeof AnalyzeSentimentInputSchema>;

const AnalyzeSentimentOutputSchema = z.object({
  sentiment: z.string().describe('The overall sentiment of the journal entry (e.g., positive, negative, neutral).'),
  summary: z.string().describe('A brief summary of the sentiment expressed in the journal entry.'),
});
export type AnalyzeSentimentOutput = z.infer<typeof AnalyzeSentimentOutputSchema>;

export async function analyzeSentiment(input: AnalyzeSentimentInput): Promise<AnalyzeSentimentOutput> {
  return analyzeSentimentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeSentimentPrompt',
  input: {
    schema: z.object({
      journalEntry: z.string().describe('The journal entry to analyze.'),
    }),
  },
  output: {
    schema: z.object({
      sentiment: z.string().describe('The overall sentiment of the journal entry (e.g., positive, negative, neutral).'),
      summary: z.string().describe('A brief summary of the sentiment expressed in the journal entry.'),
    }),
  },
  prompt: `You are an AI sentiment analysis expert. Analyze the sentiment of the following journal entry and provide a summary of the sentiment expressed.\n\nJournal Entry: {{{journalEntry}}}\n\nSentiment: \nSummary: `,
});

const analyzeSentimentFlow = ai.defineFlow<
  typeof AnalyzeSentimentInputSchema,
  typeof AnalyzeSentimentOutputSchema
>({
  name: 'analyzeSentimentFlow',
  inputSchema: AnalyzeSentimentInputSchema,
  outputSchema: AnalyzeSentimentOutputSchema,
},
async input => {
  const {output} = await prompt(input);
  return output!;
});
